<local:BaseView x:Class="BIM_Leaders_Windows.ListsCreateForm"
        x:Name="ListsCreateWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:BIM_Leaders_Windows"
        mc:Ignorable="d"
        
        WindowStyle="None"
        Style="{DynamicResource SWindow}"
        Title="BIM Leaders - Create Lists"
        WindowStartupLocation="CenterScreen"
        Width="1224"
        Height="576"
        
        d:DataContext="{d:DesignInstance Type=local:ListsCreateViewModel}"
        MouseLeftButtonDown="FormMouseMove">

    <local:BaseView.Resources>
        <ResourceDictionary Source="../Resources.xaml" />
    </local:BaseView.Resources>

    <Grid Background="{x:Null}">
        <materialDesign:Card UniformCornerRadius="36">
            <materialDesign:Card.Background>
                <LinearGradientBrush StartPoint="0.1, 0" EndPoint="0.3, 1">
                    <GradientStop Color="{Binding Source={StaticResource SColorBackgroundMain1}, Path=Color}" Offset="1" />
                    <GradientStop Color="{Binding Source={StaticResource SColorBackgroundMain2}, Path=Color}" Offset="0" />
                </LinearGradientBrush>
            </materialDesign:Card.Background>

            <Grid Background="{x:Null}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="72" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="72" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <TextBlock Text="Create Lists"
                               Style="{StaticResource STextBlock}" />
                    <Button x:Name="buttonCancel"
                            Command="{Binding CloseCommand, Mode=OneWay}"
                            CommandParameter="{Binding ElementName=ListsCreateWindow}"
                            Style="{StaticResource SButtonClose}" />
                </Grid>

                <Grid Grid.Row="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Margin="18,0" VerticalAlignment="Top">
                            <Label Content="Elements Type"
                                   Style="{StaticResource SLabelBold}" />
                            <CheckBox x:Name="checkboxCreateAluminium" IsChecked="{Binding Path=CreateAluminium, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Content="Aluminium" ToolTip="Create aluminium lists."
                                      Style="{StaticResource SCheckBox}" VerticalAlignment="Center" />
                            <CheckBox x:Name="checkboxCreateMetal" IsChecked="{Binding Path=CreateMetal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Content="Metal" ToolTip="Create metal lists."
                                      Style="{StaticResource SCheckBox}" VerticalAlignment="Center" />
                            <CheckBox x:Name="checkboxCreateCarpentry" IsChecked="{Binding Path=CreateCarpentry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Content="Carpentry" ToolTip="Create carpentry lists."
                                      Style="{StaticResource SCheckBox}" VerticalAlignment="Center" />

                            <Label Content="Aluminium Walls Prefix"
                                   Style="{StaticResource SLabelBold}" Margin="-5,9,0,0"/>
                            <TextBox Grid.Column="1" x:Name="textboxTypeNamePrefixAluminiumWalls"
                                     Text="{Binding TypeNamePrefixAluminiumWalls, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     ToolTip="Elements with Type Name starting with given substring, will be recognized as Aluminium curtain walls."
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxTypeNamePrefixAluminiumWalls, Path=(Validation.Errors)/ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Type Comments (Aluminium)"
                                   Style="{StaticResource SLabelBold}" />
                            <TextBox x:Name="textboxTypeCommentsAluminium"
                                     Text="{Binding TypeCommentsAluminium, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     ToolTip="Elements with Type Comments filled as given values, will be recognized as Aluminium elements."
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxTypeCommentsAluminium, Path=(Validation.Errors)/ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Type Comments (Metal)"
                                   Style="{StaticResource SLabelBold}" />
                            <TextBox x:Name="textboxTypeCommentsMetal"
                                     Text="{Binding TypeCommentsMetal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     ToolTip="Elements with Type Comments filled as given values, will be recognized as Metal elements."
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxTypeCommentsMetal, Path=(Validation.Errors)/ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Type Comments (Carpentry)"
                                   Style="{StaticResource SLabelBold}" />
                            <TextBox x:Name="textboxTypeCommentsCarpentry"
                                     Text="{Binding TypeCommentsCarpentry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     ToolTip="Elements with Type Comments filled as given values, will be recognized as Carpentry elements."
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxTypeCommentsCarpentry, Path=(Validation.Errors)/ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Marking"
                                   Style="{StaticResource SLabelBold}" />
                            <CheckBox x:Name="checkboxSortIsNeeded" IsChecked="{Binding Path=SortIsNeeded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Content="Sort is needed" ToolTip="Sort numbering of elements from the lowest to the upper."
                                      Style="{StaticResource SCheckBox}" Margin="0,0,0,7"/>

                        </StackPanel>

                        <StackPanel Grid.Column="1" Margin="18,0" VerticalAlignment="Top">
                            <Label Content="Views Name Prefix"
                                   Style="{StaticResource SLabelBold}" />
                            <TextBox x:Name="textboxViewNamePrefix"
                                     Text="{Binding ViewNamePrefix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxViewNamePrefix, Path=(Validation.Errors)/ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Section Views Type"
                                   Style="{StaticResource SLabelBold}" Margin="-5,9,0,0" />
                            <ComboBox x:Name="comboboxViewTypeListSection" SelectedValue="{Binding ViewTypeListSectionSelected, Mode=TwoWay}" DisplayMemberPath="Key" SelectedValuePath="Value"
                                      ItemsSource="{Binding ViewTypeListSection, Mode=OneWay}"
                                      Style="{StaticResource SComboBox}" />

                            <Label Content="Section Views Template"
                                   Style="{StaticResource SLabelBold}" />
                            <ComboBox x:Name="comboboxViewTemplateListSection" SelectedValue="{Binding ViewTemplateListSectionSelected, Mode=TwoWay}" DisplayMemberPath="Key" SelectedValuePath="Value"
                                  ItemsSource="{Binding ViewTemplateListSection, Mode=OneWay}"
                                  Style="{StaticResource SComboBox}" />

                            <Label Content="Plan Views Type"
                                   Style="{StaticResource SLabelBold}" Margin="-5,18,0,0" />
                            <ComboBox x:Name="comboboxViewTypeListPlan" SelectedValue="{Binding ViewTypeListPlanSelected, Mode=TwoWay}" DisplayMemberPath="Key" SelectedValuePath="Value"
                                      ItemsSource="{Binding ViewTypeListPlan, Mode=OneWay}"
                                      Style="{StaticResource SComboBox}" />

                            <Label Content="Plan Views Template"
                                   Style="{StaticResource SLabelBold}" />
                            <ComboBox x:Name="comboboxViewTemplateListPlan" SelectedValue="{Binding ViewTemplateListPlanSelected, Mode=TwoWay}" DisplayMemberPath="Key" SelectedValuePath="Value"
                                  ItemsSource="{Binding ViewTemplateListPlan, Mode=OneWay}"
                                  Style="{StaticResource SComboBox}" />
                        </StackPanel>

                        <StackPanel Grid.Column="2" Margin="18,0" VerticalAlignment="Top">
                            <Label Content="Tag Type (Aluminium)"
                                   Style="{StaticResource SLabelBold}" />
                            <ComboBox x:Name="comboboxTagGenAluminiumList" SelectedValue="{Binding TagGenAluminiumListSelected, Mode=TwoWay}" DisplayMemberPath="Key" SelectedValuePath="Value"
                                      ItemsSource="{Binding TagGenAluminiumList, Mode=OneWay}"
                                      Style="{StaticResource SComboBox}" />

                            <Label Content="Tag Type (Metal)"
                                   Style="{StaticResource SLabelBold}" />
                            <ComboBox x:Name="comboboxTagGenMetalList" SelectedValue="{Binding TagGenMetalListSelected, Mode=TwoWay}" DisplayMemberPath="Key" SelectedValuePath="Value"
                                      ItemsSource="{Binding TagGenMetalList, Mode=OneWay}"
                                      Style="{StaticResource SComboBox}" />

                            <Label Content="Tag Type (Carpentry)"
                                   Style="{StaticResource SLabelBold}" />
                            <ComboBox x:Name="comboboxTagGenCarpentryList" SelectedValue="{Binding TagGenCarpentryListSelected, Mode=TwoWay}" DisplayMemberPath="Key" SelectedValuePath="Value"
                                      ItemsSource="{Binding TagGenCarpentryList, Mode=OneWay}"
                                      Style="{StaticResource SComboBox}" />
                            
                            <Label Content="Tag Placement Offset X (mm)"
                                   Style="{StaticResource SLabelBold}" Margin="-5,21,0,0" />
                            <TextBox x:Name="textboxTagPlacementOffsetXstring" ToolTip="Move tag by given coordinates from the the element instance origin. After this move section must be inside of tag's table."
                                     Text="{Binding TagPlacementOffsetXstring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxTagPlacementOffsetXstring, Path=(Validation.Errors)[0].ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Tag Placement Offset Y (mm)"
                                   Style="{StaticResource SLabelBold}" />
                            <TextBox x:Name="textboxTagPlacementOffsetYstring" ToolTip="Move tag by given coordinates from the element instance origin. After this move section must be inside of tag's table."
                                     Text="{Binding TagPlacementOffsetYstring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxTagPlacementOffsetYstring, Path=(Validation.Errors)[0].ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />
                        </StackPanel>

                        <StackPanel Grid.Column="3" Margin="18,0" VerticalAlignment="Top">
                            
                            <Label Content="Titleblock Type"
                                   Style="{StaticResource SLabelBold}" />
                            <ComboBox x:Name="titleblockList" SelectedValue="{Binding TitleBlockListSelected, Mode=TwoWay}" DisplayMemberPath="Key" SelectedValuePath="Value"
                                      ItemsSource="{Binding TitleBlockList, Mode=OneWay}"
                                      Style="{StaticResource SComboBox}" />

                            <Label Content="Facade Placement Offset X (mm)"
                                   Style="{StaticResource SLabelBold}" Margin="-5,21,0,0" />
                            <TextBox x:Name="textboxFacadePlacementOffsetXstring" ToolTip="Move facade view by given coordinates from the the sheet origin. After this move facade must be inside of tag's table."
                                     Text="{Binding FacadePlacementOffsetXstring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxFacadePlacementOffsetXstring, Path=(Validation.Errors)[0].ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Facade Placement Offset Y (mm)"
                                   Style="{StaticResource SLabelBold}" />
                            <TextBox x:Name="textboxFacadePlacementOffsetYstring" ToolTip="Move facade view by given coordinates from the sheet origin. After this move facade must be inside of tag's table."
                                     Text="{Binding FacadePlacementOffsetYstring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxFacadePlacementOffsetYstring, Path=(Validation.Errors)[0].ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Section Placement Offset X (mm)"
                                   Style="{StaticResource SLabelBold}" Margin="-5,21,0,0" />
                            <TextBox x:Name="textboxSectionPlacementOffsetXstring" ToolTip="Move section view by given coordinates from the the sheet origin. After this move section must be inside of tag's table."
                                     Text="{Binding SectionPlacementOffsetXstring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxSectionPlacementOffsetXstring, Path=(Validation.Errors)[0].ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />

                            <Label Content="Plan Placement Offset Y (mm)"
                                   Style="{StaticResource SLabelBold}" Margin="-5,21,0,0" />
                            <TextBox x:Name="textboxPlanPlacementOffsetYstring" ToolTip="Move plan view by given coordinates from the sheet origin. After this move plan must be inside of tag's table."
                                     Text="{Binding PlanPlacementOffsetYstring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     Style="{StaticResource STextBox}" />
                            <TextBlock Text="{Binding ElementName=textboxPlanPlacementOffsetYstring, Path=(Validation.Errors)[0].ErrorContent}"
                                       Style="{StaticResource STextBlockError}" />
                        </StackPanel>

                    </Grid>
                    
                </Grid>

                <Grid Grid.Row="2">
                    <StackPanel>
                        <Button x:Name="buttonOk"
                                Command="{Binding RunCommand}"
                                CommandParameter="{Binding ElementName=ListsCreateWindow}"
                                Content="Magic" ToolTip="Run"
                                Style="{StaticResource SButtonOk}" Width="270">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource MultivalueBoolInvert}" Mode="TwoWay">
                                    <Binding ElementName="checkboxCreateAluminium" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="checkboxCreateMetal" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="checkboxCreateCarpentry" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="textboxTypeNamePrefixAluminiumWalls" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="textboxTypeCommentsAluminium" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="textboxTypeCommentsMetal" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="textboxTypeCommentsCarpentry" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />

                                    <Binding ElementName="textboxViewNamePrefix" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />

                                    <Binding ElementName="textboxTagPlacementOffsetXstring" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="textboxTagPlacementOffsetYstring" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />

                                    <Binding ElementName="textboxFacadePlacementOffsetXstring" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="textboxFacadePlacementOffsetYstring" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="textboxSectionPlacementOffsetXstring" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                    <Binding ElementName="textboxPlanPlacementOffsetYstring" Path="(Validation.HasError)" UpdateSourceTrigger="PropertyChanged" Mode="OneWay" />
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>

        </materialDesign:Card>
    </Grid>
</local:BaseView>